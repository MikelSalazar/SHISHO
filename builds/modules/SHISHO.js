import { Root } from "./data/model/Root.js";
import { Viewport } from "./view/Viewport.js";
import { Dialog } from "./view/widgets/Dialog.js";

/** Defines the main class of the SHISHO Knowledge Management System. */
export class SHISHO {


	// ------------------------------------------------------------ CONSTRUCTOR

	/** Initializes a new SHISHO App instance.
	 * @param {*} params The initialization parameters. */
	constructor(params = {}) {

		/** The viewports of the app. */
		this._viewports = [];

		// Adds the instance to the static array
		let iN = this._instanceNumber = SHISHO.instances.length;
		let iS = this._instanceString = "ShishoApp" + ((iN > 0) ? iN : "");
		SHISHO.instances.push(this);

		// Create an empty ontology
		this._data = new Root();

		// Create a new viewport
		this.viewports.push(new Viewport(this, params));

		// Check if there is a data element to analyze
		if (params.dataElement) {
			this._dataElement = document.getElementById(params.dataElement);
		}
		else
			this._dataElement = document.getElementById(iS + "Data");

		// Get the data from the parameters
		if (params.data) {
			if (typeof params.data === 'string') {
				this._dataElement = document.getElementById(params.dataElement);
				if (!this._dataElement)
					throw new Error("Invalid data element");
			}

			// Try to deserialize the given data
			this.deserialize(params.data);
		}

		// Show a message on console
		console.log(SHISHO.AppName + " " + SHISHO.AppVersion + " Initialized");
	}


	// ------------------------------------------------------ PUBLIC PROPERTIES

	/** The SHISHO app name. */
	static get AppName() { return "SHISHO"; }

	/** The SHISHO app version number. */
	static get AppVersion() { return "0.4.1"; }

	/** The SHISHO app instance number. */
	static get _instanceNumber() { return this._instanceNumber; }

	/** The viewports of the app. */
	get viewports() { return this._viewports; }

	/** The data of the app. */
	get data() { return this._data; }


	// --------------------------------------------------------- PUBLIC METHODS

	/** Initializes a new SHISHO app (without having to use the "new" keyword).
	* @param {*} params The initialization parameters.
	* @returns The new App instance. */
	static init(params) { return new SHISHO(params); }


	/** Loads the SHISHO data.
	 * @param data The data to load. */
	deserialize(data) {

		// Analyze the data
		try {
			// Try to parse string data
			if (typeof data == 'string') {
				let start = data.indexOf('{'), end = data.lastIndexOf('}');
				if (start < 0 || end < 0)
					throw new Error("Invalid JSON data");
				let jsonData = data.slice(start, end + 1);
				data = JSON.parse(jsonData);
			}

			// Deserialize the app data
			this._data.deserialize(data);

		}
		catch (e) {
			Dialog.create("Error", this._viewports[0].layers.dialog, "Error", "Unable to load data.<br>" + e.message);
			return false;
		}
	}


	/** Saves the app data. */
	serialize() {

		// Create the JSON data
		let data = "";

		// Check if we have to save the data into an HTML element
		if (this._saveToElement) {
			// If the element doesn't exist, create it
			if (!this._dataElement) {
				this._dataElement = document.createElement('script');
				this._dataElement.id = this._instanceString + "Data";
				document.body.append(this._dataElement);
			}

			// Save the JSON data in a way
			this._dataElement.textContent = "\nlet " + this._instanceString +
				"Data = " + data + ';\n';
		}

		// Return the data
		return data;
	}
}

// --------------------------------------------------- PUBLIC STATIC FIELDS

/** The SHISHO app instances. */
SHISHO.instances = [];

/** The SHISHO app resources. */
SHISHO.resources = {};

// Set the default class to export
export default SHISHO;

// -------------------------------------------------- RESOURCE DATA 
SHISHO.resources = {
	"App": new Shape({ width: 512, height: 512, children: [
		new Shape({color: "#4facfe", path: "m 271.83223,123.93778 -88.90151,161.1114 7.69932,4.25201 88.9015,-161.1114 z m 17.22091,12.33414 -3.53519,8.05479 108.39002,47.62755 3.53519,-8.04697 z m 108.01308,57.60033 a 4.3966097,4.3966097 0 0 0 -0.13266,0.002 4.3966097,4.3966097 0 0 0 -4.08209,3.18949 l -19.97485,69.9208 a 4.3966097,4.3966097 0 0 0 3.01957,5.43366 4.3966097,4.3966097 0 0 0 5.43365,-3.01957 l 19.9827,-69.92275 a 4.3966097,4.3966097 0 0 0 -3.02741,-5.43171 4.3966097,4.3966097 0 0 0 -1.21876,-0.17189 z m -25.90071,90.50505 c -2.84772,0 -5.15632,2.41459 -5.15632,5.3946 0,2.98 2.3086,5.39654 5.15632,5.39654 2.8477,0 5.15631,-2.41654 5.15631,-5.39654 0,-2.98001 -2.30861,-5.3946 -5.15631,-5.3946 z m -192.09422,8.22666 a 4.3966097,4.3966097 0 0 0 -3.98833,2.58011 4.3966097,4.3966097 0 0 0 2.18558,5.82429 l 75.1865,34.15668 a 4.3966097,4.3966097 0 0 0 5.82428,-2.18557 4.3966097,4.3966097 0 0 0 -2.18557,-5.8243 l -75.1865,-34.15667 a 4.3966097,4.3966097 0 0 0 -1.66017,-0.39063 4.3966097,4.3966097 0 0 0 -0.17578,-0.004 z m 187.00431,12.66032 a 4.3966097,4.3966097 0 0 0 -0.13085,0.004 4.3966097,4.3966097 0 0 0 -4.08208,3.18168 l -16.80099,58.71948 -61.40312,-27.03548 a 4.3966097,4.3966097 0 0 0 -1.66213,-0.37698 4.3966097,4.3966097 0 0 0 -4.13286,2.627 4.3966097,4.3966097 0 0 0 2.25003,5.79499 l 62.50664,27.52381 -0.76368,2.66993 a 4.3966097,4.3966097 0 0 0 3.01957,5.4317 4.3966097,4.3966097 0 0 0 5.43366,-3.01954 l 0.43164,-1.50782 3.15629,1.39062 a 4.3966097,4.3966097 0 0 0 5.795,-2.25199 4.3966097,4.3966097 0 0 0 -2.25198,-5.79499 l -4.25787,-1.87501 17.13108,-59.87382 a 4.3966097,4.3966097 0 0 0 -3.01762,-5.44148 4.3966097,4.3966097 0 0 0 -1.22071,-0.166 z"}), 
		new Shape({color: "#ffffff", path: "m 132.51993,103.88675 -6.04695,11.44154 -12.44548,1.26956 8.53138,9.57824 -2.72661,12.76774 11.33803,-5.50788 10.77163,6.6114 -1.51174,-12.96695 9.36731,-8.67394 -12.28337,-2.5137 z m 129.47234,0.14064 -4.29108,23.84405 -21.19168,9.8302 20.35378,11.63882 2.37503,24.1546 16.87326,-16.66818 22.67607,5.08601 -9.93373,-21.92216 11.63492,-20.99049 -23.00029,3.07816 z m 125.61289,51.67057 -4.29301,23.8714 -21.21903,9.8302 20.35573,11.63882 2.37502,24.1253 16.87328,-16.63888 22.67605,5.086 -9.90638,-21.92215 11.63493,-21.01979 -23.0003,3.10746 z m -282.70276,33.67425 -3.18559,17.79711 -15.818559,7.31649 15.172069,8.67199 1.75393,18.02366 12.58023,-12.42984 16.926,3.7852 -7.39658,-16.35567 8.66612,-15.65059 -17.14279,2.31643 z m 62.19999,64.46566 -4.64458,25.93392 -23.08038,10.67786 22.137,12.65641 2.58988,26.24448 18.33032,-18.10766 24.64873,5.56453 -10.77161,-23.8714 12.63297,-22.82646 -24.9964,3.39068 z m 167.64469,83.13971 -4.40045,24.43784 -21.73074,10.05677 20.84011,11.92199 2.42971,24.71907 17.27757,-17.06467 23.21708,5.22662 -10.15052,-22.45925 11.90445,-21.49833 -23.54131,3.1641 z"})
	]}),
	"Options": new Shape({ width: 512, height: 512, children: [
		new Shape({path: "m 272.067,511.99962 h -32.13325 c -25.98923,0 -47.13461,-21.14423 -47.13461,-47.13458 v -10.87108 c -11.0491,-3.53001 -21.78413,-7.98615 -32.09697,-13.32286 l -7.70421,7.70421 c -18.6592,18.68186 -48.54817,18.13421 -66.66349,-0.008 L 63.623228,425.65766 C 45.474265,407.52874 44.952311,377.65 63.629275,358.99422 l 7.698162,-7.69816 C 65.990352,340.98322 61.535411,330.2501 58.004567,319.19912 H 47.134616 C 21.146514,319.19965 0,298.05564 0,272.06832 v -32.13399 c 0,-25.98922 21.145002,-47.13458 47.134616,-47.13458 h 10.869951 c 3.530995,-11.04985 7.986163,-21.78411 13.32287,-32.09695 l -7.703832,-7.70307 c -18.666003,-18.64595 -18.15123,-48.52923 0.006,-66.663434 l 22.71318,-22.711982 c 18.159165,-18.184099 48.041705,-18.638021 66.663485,0.006 l 7.69703,7.697024 c 10.31285,-5.335948 21.04825,-9.79202 32.09697,-13.322861 V 47.134581 C 192.80022,21.145364 213.94414,0 239.93489,0 h 32.13325 c 25.98923,0 47.13461,21.143853 47.13461,47.134581 v 10.871077 c 11.04911,3.53001 21.78413,7.986157 32.09697,13.32286 l 7.70384,-7.703826 c 18.6592,-18.681863 48.54816,-18.134209 66.66348,0.0072 l 22.71125,22.710092 c 18.14896,18.128916 18.67091,48.007656 -0.008,66.663436 l -7.69817,7.69816 c 5.33709,10.31284 9.79203,21.04596 13.32287,32.09695 h 10.86996 c 25.98923,0 47.13461,21.14423 47.13461,47.13458 v 32.13398 c 0,25.98922 -21.145,47.13458 -47.13461,47.13458 h -10.86996 c -3.53099,11.04985 -7.98616,21.78411 -13.32287,32.09695 l 7.70421,7.70382 c 18.66601,18.64596 18.15086,48.52923 -0.008,66.66344 l -22.71313,22.71198 c -18.15916,18.1841 -48.0417,18.63802 -66.66349,-0.008 l -7.69702,-7.69702 c -10.31285,5.33595 -21.04825,9.79202 -32.09697,13.32286 v 10.8715 C 319.1986,490.85615 298.05435,512 272.06398,512 Z M 165.71837,409.16981 c 14.32709,8.47296 29.74723,14.87399 45.83068,19.02505 6.62401,1.70903 11.25206,7.68304 11.25206,14.524 v 22.14807 c 0,9.44695 7.6872,17.13301 17.13415,17.13301 h 32.13326 c 9.44695,0 17.13415,-7.68606 17.13415,-17.13301 v -22.14807 c 0,-6.84096 4.62805,-12.8149 11.25207,-14.524 16.0842,-4.15106 31.50395,-10.55209 45.83067,-19.02505 5.89495,-3.48601 13.39997,-2.53803 18.24307,2.30499 l 15.68811,15.68885 c 6.76386,6.77217 17.62587,6.61494 24.22419,0.008 l 22.72712,-22.72597 c 6.58206,-6.57412 6.80203,-17.43802 0.008,-24.22493 l -15.69491,-15.69489 c -4.84197,-4.84197 -5.78988,-12.34812 -2.30499,-18.24193 8.47297,-14.32595 14.87286,-29.74607 19.02392,-45.83064 1.71002,-6.62401 7.68418,-11.25092 14.52401,-11.25092 h 22.14696 c 9.44695,0 17.13416,-7.68606 17.13416,-17.13301 v -32.13398 c 0,-9.44695 -7.68683,-17.13301 -17.13416,-17.13301 h -22.14696 c -6.84096,0 -12.81414,-4.62805 -14.52401,-11.25092 -4.15106,-16.08495 -10.55209,-31.50507 -19.02392,-45.83065 -3.48504,-5.89418 -2.53702,-13.39996 2.30499,-18.24192 l 15.68886,-15.68885 c 6.782,-6.77406 6.60512,-17.63418 0.008,-24.22493 L 404.45174,84.839449 c -6.58698,-6.596045 -17.45088,-6.789179 -24.22495,-0.006 L 364.53264,100.5283 c -4.84196,4.84309 -12.35002,5.791 -18.24307,2.30499 -14.3271,-8.472966 -29.74723,-14.873986 -45.83068,-19.025049 -6.62402,-1.708993 -11.25206,-7.683039 -11.25206,-14.523998 V 47.134279 c 0,-9.446948 -7.6872,-17.13301 -17.13416,-17.13301 h -32.13325 c -9.44695,0 -17.13415,7.686062 -17.13415,17.13301 v 22.148075 c 0,6.840958 -4.62805,12.814891 -11.25207,14.523997 -16.0842,4.151063 -31.50396,10.552084 -45.83067,19.025049 -5.89608,3.48499 -13.40111,2.53701 -18.24308,-2.30499 l -15.6881,-15.688851 c -6.76386,-6.772171 -17.62701,-6.614942 -24.22419,-0.0072 L 84.840041,107.55634 c -6.582065,6.57413 -6.802034,17.43689 -0.006,24.22493 l 15.694909,15.6949 c 4.84197,4.84196 5.78988,12.34812 2.30499,18.24193 -8.47297,14.32595 -14.872861,29.74607 -19.023927,45.83064 -1.710014,6.62401 -7.684179,11.25092 -14.524008,11.25092 H 47.134843 c -9.446955,0.001 -17.134157,7.68719 -17.134157,17.13414 v 32.13399 c 0,9.44694 7.687202,17.13301 17.134157,17.13301 H 69.2818 c 6.840964,0 12.814145,4.62804 14.524008,11.25092 4.151067,16.08494 10.552092,31.50507 19.023922,45.83064 3.485,5.89418 2.53702,13.39996 -2.30499,18.24192 l -15.688857,15.68885 c -6.782002,6.77406 -6.60512,17.63418 -0.006,24.22493 l 22.725227,22.72483 c 6.58698,6.59605 17.45089,6.78918 24.22495,0.008 L 147.47421,411.476 c 3.568,-3.56702 10.9909,-6.59416 18.24421,-2.30401 z"}), 
		new Shape({path: "m 256.00019,367.38705 c -61.42883,0 -111.40188,-49.97301 -111.40188,-111.40179 0,-61.42878 49.97305,-111.40179 111.40188,-111.40179 61.42883,0 111.40188,49.97301 111.40188,111.40179 0,61.42878 -49.97305,111.40179 -111.40188,111.40179 z m 0,-192.80164 c -44.88579,0 -81.39991,36.51598 -81.39991,81.39985 0,44.88387 36.51601,81.39985 81.39991,81.39985 44.8839,0 81.39991,-36.51598 81.39991,-81.39985 0,-44.88387 -36.51525,-81.39985 -81.39991,-81.39985 z"})
	]}),
	"Test": new Shape({ width: 512, height: 512, path: "M 256.00001,0 335.10835,168.53994 512,195.5666 384.00002,326.75665 414.2167,512 256,424.53995 97.783292,511.99996 127.99999,326.75665 1.4633393e-6,195.56658 176.89164,168.53994 Z"})
}